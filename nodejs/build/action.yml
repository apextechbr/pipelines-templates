name: "NodeJS build and push image"
description: "Buildar aplicação e gerar e enviar imagem docker"

inputs:
  GCP_PROJECT_ID:
    description: "The project id in GCP"
    required: true

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v3

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      uses: borales/actions-yarn@v4
      with:
        cmd: install

    - name: Build APP
      uses: borales/actions-yarn@v4
      with:
        cmd: build

    - name: Configure Google Cloud SDK
      run: |
        echo "$GOOGLE_CLOUD_KEY" > /tmp/gcloud_key.json
        gcloud auth activate-service-account --key-file=/tmp/gcloud_key.json
        gcloud auth configure-docker us-east1-docker.pkg.dev
      shell: bash

    - name: Build and push docker image
      run: |
        IMAGE_TAG=${{ github.sha }}
        IMAGE_NAME=us-east1-docker.pkg.dev/${{ inputs.GCP_PROJECT_ID }}/${{ steps.get_repo_name.outputs.REPO_NAME }}/${{ steps.get_repo_name.outputs.REPO_NAME }}:${IMAGE_TAG}

        mkdir build
        echo ${IMAGE_NAME} >> build/image-name.txt

        docker build -t ${IMAGE_NAME} .
        docker push ${IMAGE_NAME}
      shell: bash
